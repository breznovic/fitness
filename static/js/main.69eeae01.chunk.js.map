{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","match","useMatch","className","s","headerS","container","navLinks","to","active","navLink","isActive","Message","props","classes","message","src","messageData","avatar","angle","content","name","text","time","HW1","Affair","task","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onEnter","error","totalUsers","inputClass","errorInput","input","greeting","value","onChange","onKeyDown","onBlur","button","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","Error404","PreJunior","RoutesTo","path","element","replace","HW5","Routes","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.69eeae01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerS\":\"Header_headerS__85So4\",\"container\":\"Header_container__3MPsc\",\"navLinks\":\"Header_navLinks__1PS7L\",\"navLink\":\"Header_navLink__16Qkp\",\"active\":\"Header_active__1dmn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"angle\":\"Message_angle__1T-oN\",\"content\":\"Message_content__Ltxgc\",\"name\":\"Message_name__Tzmp0\",\"text\":\"Message_text__2fXBO\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1P_Mf\",\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Affairs_task__3yGWZ\",\"buttons\":\"Affairs_buttons__99wN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\",\"button\":\"SuperButton_button__cV79v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport {NavLink, useMatch} from \"react-router-dom\"\nimport s from './Header.module.css'\n\nfunction Header() {\n    let match = useMatch('/PRE_JUNIOR')\n\n    return (\n        <div className={s.headerS}>\n            <div className={s.container}>\n                <div className={s.navLinks}>\n                    <NavLink to={'/'} className={() => (match ? s.active : s.navLink)}> Main Page </NavLink>\n                    <NavLink to={'/hw1'} className={(navLink) => (navLink.isActive ? s.active : s.navLink)}> Homework 1</NavLink>\n                    <NavLink to={'/hw2'} className={(navLink) => (navLink.isActive ? s.active : s.navLink)}> Homework 2</NavLink>\n                    <NavLink to={'/hw3'} className={(navLink) => (navLink.isActive ? s.active : s.navLink)}> Homework 3</NavLink>\n                    <NavLink to={'/hw4'} className={(navLink) => (navLink.isActive ? s.active : s.navLink)}> Homework 4</NavLink>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport {messageData} from './HW1'\nimport classes from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={classes.message}>\n\n            <img src={messageData.avatar} className={classes.avatar}/>\n\n            <div className={classes.angle}/>\n            <div className={classes.content}>\n                <div className={classes.name}>{messageData.name}</div>\n                <div className={classes.text}>{messageData.message}</div>\n                <div className={classes.time}>\n                    <div>{messageData.time}</div>\n                </div>\n            </div>\n            </div>\n            )\n            }\n\n            export default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nexport type MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nexport const messageData = {\n    avatar: 'https://avatars.mds.yandex.net/get-zen_doc/3956291/pub_60365b7ea332dd7373c6d82b_60365bb0700da52db25acabf/scale_1200',\n    name: 'Artem',\n    message: 'npm start нажимал?',\n    time: '20:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message avatar={messageData.avatar} name={messageData.name} message={messageData.message} time={messageData.time} />\n\n            <hr/>\n           {/* для личного творчества, могу проверить\n            <AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }// need to fix\n\n    return (\n        <div className={s.task}>\n            <span>{props.affair.name}</span><span>[ {props.affair.priority} ]</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n            <div className={s.buttons}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\" // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'Angular', priority: 'low'},\n    {_id: 3, name: 'Vue', priority: 'low'},\n    {_id: 4, name: 'CSS', priority: 'high'},\n    {_id: 5, name: 'HTML', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'high') return affairs.filter(a => a.priority === \"high\")\n    else if (filter === 'middle') return affairs.filter(a => a.priority === \"middle\")\n    else if (filter === 'low') return affairs.filter(a => a.priority === \"low\")\n    else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onEnter: (e: React.KeyboardEvent<HTMLInputElement>) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, onEnter, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <div>\n                <input value={name}\n                       onChange={setNameCallback}\n                       className={inputClass}\n                       onKeyDown={onEnter}\n                       onBlur={setNameCallback}\n                />\n                <div className={s.error}>{error}</div>\n            </div>\n\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const trimmedName = e.currentTarget.value.trim()\n\n        if (trimmedName) {\n            setName(trimmedName)\n            setError('')\n        } else {\n            setName('')\n            setError('Name is require')\n        }// need to fix\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n        // need to fix\n    }\n\n    const onEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const user ={\n            _id: v1(),\n            name,\n        }\n        setUsers([...users, user]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Routes, Route, Navigate} from \"react-router-dom\";\nimport HW1 from \"../h1/HW1\";\nimport HW2 from \"../h2/HW2\";\nimport HW3 from \"../h3/HW3\";\nimport HW4 from \"../h4/HW4\";\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/PRE_JUNIOR\",\n    HW1: \"/hw1\",\n    HW2: \"/hw2\",\n    HW3: \"/hw3\",\n    HW4: \"/hw4\",\n}\n\nfunction RoutesTo() {\n    return (\n        <div>\n            <Routes>\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path=\"/\" element={<Navigate replace to=\"/PRE_JUNIOR\" />} />\n                <Route path=\"/PRE_JUNIOR\"  element={<PreJunior/>}/>\n                <Route path=\"/hw1\"  element={<HW1/>}/>\n                <Route path=\"/hw2\"  element={<HW2/>}/>\n                <Route path=\"/hw3\"  element={<HW3/>}/>\n                <Route path=\"/hw4\"  element={<HW4/>}/>\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route element={<Error404/>}/>\n            </Routes>\n\n        </div>\n    );\n}\n\nexport default RoutesTo;","import React from 'react'\nimport Header from './Header'\nimport {HashRouter} from \"react-router-dom\";\nimport RoutesTo from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <RoutesTo/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}